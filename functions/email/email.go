package main

import (
	"encoding/json"
	"fmt"
	"github.com/aws/aws-lambda-go/events"
	"github.com/aws/aws-lambda-go/lambda"
	"io/ioutil"
	"net/http"
	"os"
	"strings"
)

type AutoGenerated struct {
	Personalizations []Personalizations `json:"personalizations"`
	From             From               `json:"from"`
	Content          []Content          `json:"content"`
}
type To struct {
	Email string `json:"email"`
}
type Personalizations struct {
	To      []To   `json:"to"`
	Subject string `json:"subject"`
}
type From struct {
	Email string `json:"email"`
}
type Content struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}

func handler(request events.APIGatewayProxyRequest) (*events.APIGatewayProxyResponse, error) {
	url := "https://rapidprod-sendgrid-v1.p.rapidapi.com/mail/send"

	from := From{
		Email: "test_email@demo.com",
	}

	content := Content{
		Type:  "text/plain",
		Value: "Hello,World!",
	}

	to := To{
		Email: "danrousseau@protonmail.com",
	}

	persona := Personalizations{
		To:      []To{to},
		Subject: "testing",
	}

	mail := AutoGenerated{
		Personalizations: []Personalizations{persona},
		From:             from,
		Content:          []Content{content},
	}

	btResult, _ := json.Marshal(&mail)
	req, _ := http.NewRequest("POST", url, strings.NewReader(string(btResult)))

	req.Header.Add("content-type", "application/json")
	req.Header.Add("x-rapidapi-host", os.Getenv("sendgrid_host"))
	req.Header.Add("x-rapidapi-key", os.Getenv("sendgrid_token"))

	res, _ := http.DefaultClient.Do(req)

	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Println(res)
	fmt.Println(string(body))

	return &events.APIGatewayProxyResponse{
		StatusCode:        200,
		Headers:           map[string]string{"Content-Type": "text/plain"},
		MultiValueHeaders: http.Header{"Set-Cookie": {"Ding", "Ping"}},
		Body:              "ok",
		IsBase64Encoded:   false,
	}, nil
}

func main() {
	lambda.Start(handler)
}
