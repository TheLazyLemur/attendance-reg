@page "/Dashboard"
@using attendance_reg.Pages.Envoys


<div class="mt-5">
    @if (Meetings is not null)
    {
        if (Meetings.Any())
        {
            @foreach (var meeting in Meetings)
            {
                <div class="flex">
                    <div>
                        <a href="meeting/@meeting.Id">@meeting.Name</a>
                    </div>
                    <button class="text-xs text-gray-400" @onclick="@(() => {NavigationManager.NavigateTo($"report/{meeting.Id}");})">View Report</button>
                </div>
            }
        }
        else
        {
            <div>Nothing Found</div>
        }
    }
    else
    {
        <div>Loading...</div>
    }
</div>
<div class="my-5 flex space-x-5">
    <button @onclick="@(() => {_displayModal = true; StateHasChanged();})" class="bg-blue-500 text-white py-2 px-3 rounded-lg">New Meeting</button>
    <button @onclick="@(() => { NavigationManager.NavigateTo("admin"); })" class="bg-blue-500 text-white py-2 px-3 rounded-lg">Admin</button>
</div>

      <Modal DisplayModal="@_displayModal">
          <button @onclick="@(() => { _displayModal = false; })" class="close"><span class="close">&times;</span></button>
          <EditForm Model="@_meeting" OnValidSubmit="@HandleValidSubmit">
              <DataAnnotationsValidator />
              <ValidationSummary />
          
              <div class="flex flex-col space-y-5 my-5">
                  <div class="flex space-x-5">
                      <label for="name">Meeting Title</label>
                      <InputText class="border rounded-md" id="name" @bind-Value="_meeting.Name"/>
                  </div>
                  <div class="flex space-x-5">
                      <label for="topic">Meeting Topic</label>
                      <InputText class="border rounded-md" id="topic" @bind-Value="_meeting.Topic"/>
                  </div>
                  <div class="flex space-x-5">
                      <label for="speaker">Meeting Speaker</label>
                      <InputText class="border rounded-md" id="speaker" @bind-Value="_meeting.Speaker"/>
                  </div>
              </div>
              <button class="w-24 border border-blue-500 rounded-lg hover:bg-blue-500 hover:text-white" type="submit">Submit</button>
          </EditForm>
      </Modal>
@code {

    [Inject]
    public MeetingEnvoy? MeetingEnvoy { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private List<Meeting>? Meetings { get; set; }
    private bool _displayModal = false;
    private readonly Meeting _meeting = new();

    protected override async Task OnInitializedAsync()
    {
        Meetings = await MeetingEnvoy?.GetMeetings()!;
    }
    
    private async Task HandleValidSubmit()
    {
        await MeetingEnvoy?.AddStatus(_meeting)!;
        Meetings = await MeetingEnvoy.GetMeetings();
        await InvokeAsync(StateHasChanged);
    }

}